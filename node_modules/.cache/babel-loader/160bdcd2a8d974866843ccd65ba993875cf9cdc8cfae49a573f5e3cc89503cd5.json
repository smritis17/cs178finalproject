{"ast":null,"code":"import { useState } from 'react';\nimport axios from 'axios';\nconst useOpenAI = () => {\n  const askQuestion = async (skinColor, hairColor, eyeColor) => {\n    try {\n      const apiKey = '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';\n\n      // Questions\n      const questions = [`Given that I have ${skinColor} skin color, ${hairColor} hair color, and ${eyeColor} eye color, what seasonal color am I?`, \"What are the top 5 colors that suit me best and give me those hex colors in a list format ex. {color 1, color 2, color 3, etc}\", \"What are the worst 5 colors that I should avoid and give me those hex colors in a list format ex. {color1, color2, color3, etc}\"];\n\n      // Responses\n      const responses = [];\n      for (const question of questions) {\n        const response = await axios.post('https://api.openai.com/v1/completions', {\n          model: 'text-davinci-003',\n          prompt: question,\n          max_tokens: 50\n        }, {\n          headers: {\n            'Authorization': `Bearer ${apiKey}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        responses.push(response.data.choices[0].text.trim());\n      }\n      return responses;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      return []; // Return an empty array in case of error\n    }\n  };\n  return askQuestion;\n};\nexport default useOpenAI;","map":{"version":3,"names":["useState","axios","useOpenAI","askQuestion","skinColor","hairColor","eyeColor","apiKey","questions","responses","question","response","post","model","prompt","max_tokens","headers","push","data","choices","text","trim","error","console"],"sources":["/Users/smritisomasundaram/Downloads/cs178finalproject/src/hooks/useOpenAI.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nconst useOpenAI = () => {\n    const askQuestion = async (skinColor, hairColor, eyeColor) => {\n        try {\n            const apiKey = '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';\n\n            // Questions\n            const questions = [\n                `Given that I have ${skinColor} skin color, ${hairColor} hair color, and ${eyeColor} eye color, what seasonal color am I?`,\n                \"What are the top 5 colors that suit me best and give me those hex colors in a list format ex. {color 1, color 2, color 3, etc}\",\n                \"What are the worst 5 colors that I should avoid and give me those hex colors in a list format ex. {color1, color2, color3, etc}\"\n            ];\n\n            // Responses\n            const responses = [];\n\n            for (const question of questions) {\n                const response = await axios.post('https://api.openai.com/v1/completions', {\n                    model: 'text-davinci-003',\n                    prompt: question,\n                    max_tokens: 50\n                }, {\n                    headers: {\n                        'Authorization': `Bearer ${apiKey}`,\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                responses.push(response.data.choices[0].text.trim());\n            }\n\n            return responses;\n        } catch (error) {\n            console.error('Error fetching data:', error);\n            return []; // Return an empty array in case of error\n        }\n    };\n\n    return askQuestion;\n};\n\nexport default useOpenAI;\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB,MAAMC,WAAW,GAAG,MAAAA,CAAOC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,KAAK;IAC1D,IAAI;MACA,MAAMC,MAAM,GAAG,qDAAqD;;MAEpE;MACA,MAAMC,SAAS,GAAG,CACb,qBAAoBJ,SAAU,gBAAeC,SAAU,oBAAmBC,QAAS,uCAAsC,EAC1H,gIAAgI,EAChI,iIAAiI,CACpI;;MAED;MACA,MAAMG,SAAS,GAAG,EAAE;MAEpB,KAAK,MAAMC,QAAQ,IAAIF,SAAS,EAAE;QAC9B,MAAMG,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,uCAAuC,EAAE;UACvEC,KAAK,EAAE,kBAAkB;UACzBC,MAAM,EAAEJ,QAAQ;UAChBK,UAAU,EAAE;QAChB,CAAC,EAAE;UACCC,OAAO,EAAE;YACL,eAAe,EAAG,UAAST,MAAO,EAAC;YACnC,cAAc,EAAE;UACpB;QACJ,CAAC,CAAC;QAEFE,SAAS,CAACQ,IAAI,CAACN,QAAQ,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACxD;MAEA,OAAOZ,SAAS;IACpB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,EAAE,CAAC,CAAC;IACf;EACJ,CAAC;EAED,OAAOnB,WAAW;AACtB,CAAC;AAED,eAAeD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}