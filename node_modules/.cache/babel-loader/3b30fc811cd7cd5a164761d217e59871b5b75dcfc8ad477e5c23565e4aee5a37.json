{"ast":null,"code":"var _jsxFileName = \"/Users/iliang/Desktop/CS 178/cs178finalproject/src/components/face_read.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useOpenAI from '../hooks/useOpenAI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FaceRead = () => {\n  _s();\n  const [imagePreview, setImagePreview] = useState(null);\n  const [selectedColor, setSelectedColor] = useState(null);\n  const [skinColor, setSkinColor] = useState('#000000');\n  const [hairColor, setHairColor] = useState('#000000');\n  const [eyeColor, setEyeColor] = useState('#000000');\n  const [lipColor, setLipColor] = useState('#000000');\n  const [borderStyle, setBorderStyle] = useState('2px solid black');\n  const [analysisResults, setAnalysisResults] = useState([]);\n  const askQuestion = useOpenAI();\n  const handleImageUpload = () => {\n    // once user uploads new image, reset all buttons to black again\n    setSkinColor('#000000');\n    setHairColor('#000000');\n    setEyeColor('#000000');\n    setLipColor('#000000');\n    const fileInput = document.createElement('input');\n    fileInput.setAttribute('type', 'file');\n    fileInput.setAttribute('accept', 'image/*');\n    fileInput.addEventListener('change', event => {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = function (event) {\n        setImagePreview(event.target.result);\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n      }\n    });\n    fileInput.click();\n  };\n  const handleColorSelection = color => {\n    setSelectedColor(color);\n    setBorderStyle('2px solid black');\n  };\n  const handleImageClick = event => {\n    if (!selectedColor) return;\n    const canvas = document.createElement('canvas');\n    canvas.width = event.target.width;\n    canvas.height = event.target.height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(event.target, 0, 0, canvas.width, canvas.height);\n    const pixelData = ctx.getImageData(event.nativeEvent.offsetX, event.nativeEvent.offsetY, 1, 1).data;\n    const hexColor = rgbToHex(pixelData[0], pixelData[1], pixelData[2]);\n    switch (selectedColor) {\n      case 'skin':\n        setSkinColor(hexColor);\n        break;\n      case 'hair':\n        setHairColor(hexColor);\n        break;\n      case 'eye':\n        setEyeColor(hexColor);\n        break;\n      case 'lip':\n        setLipColor(hexColor);\n      default:\n        break;\n    }\n    setSelectedColor(null);\n    setBorderStyle('none');\n  };\n  const rgbToHex = (r, g, b) => {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  };\n  const getContrastColor = color => {\n    let r = parseInt(color.substr(1, 2), 16);\n    let g = parseInt(color.substr(3, 2), 16);\n    let b = parseInt(color.substr(5, 2), 16);\n    let luminance = (0.2126 * r + 0.7152 * g + 0.0722 * b) / 255;\n\n    // black text for light colors, and white for dark colors\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n\n  //   const handleAnalyze = async () => {\n  //     try {\n  //       const responses = await askQuestion(skinColor, hairColor, eyeColor, lipColor);\n  //       responses.forEach((response, index) => {\n  //         console.log(`Response ${index + 1}:`, response);\n  //       });\n  //     } catch (error) {\n  //       console.error('Error analyzing colors:', error);\n  //     }\n  //   };\n\n  const handleAnalyze = async () => {\n    try {\n      const responses = await askQuestion(skinColor, hairColor, eyeColor, lipColor);\n      setAnalysisResults(responses); // Set analysis results to state\n    } catch (error) {\n      console.error('Error analyzing colors:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleImageUpload,\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreview,\n        alt: \"Uploaded\",\n        style: {\n          maxWidth: '100%',\n          maxHeight: '300px',\n          cursor: selectedColor ? 'crosshair' : 'auto'\n        },\n        onClick: handleImageClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Click each button and click on the corresponding body part in the photo to color pick. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"color-button\",\n            style: {\n              height: '30px',\n              width: '150px',\n              backgroundColor: skinColor,\n              border: selectedColor === 'skin' ? borderStyle : 'none',\n              fontWeight: selectedColor === 'skin' ? 'bold' : 'normal',\n              color: getContrastColor(skinColor)\n            },\n            onClick: () => handleColorSelection('skin'),\n            children: \"Skin Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: '10px'\n            },\n            children: skinColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"color-button\",\n            style: {\n              height: '30px',\n              width: '150px',\n              backgroundColor: hairColor,\n              border: selectedColor === 'hair' ? borderStyle : 'none',\n              fontWeight: selectedColor === 'hair' ? 'bold' : 'normal',\n              color: getContrastColor(hairColor)\n            },\n            onClick: () => handleColorSelection('hair'),\n            children: \"Hair Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: '10px'\n            },\n            children: hairColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"color-button\",\n            style: {\n              height: '30px',\n              width: '150px',\n              backgroundColor: eyeColor,\n              border: selectedColor === 'eye' ? borderStyle : 'none',\n              fontWeight: selectedColor === 'eye' ? 'bold' : 'normal',\n              color: getContrastColor(eyeColor)\n            },\n            onClick: () => handleColorSelection('eye'),\n            children: \"Eye Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: '10px'\n            },\n            children: eyeColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"color-button\",\n            style: {\n              height: '30px',\n              width: '150px',\n              backgroundColor: lipColor,\n              border: selectedColor === 'lip' ? borderStyle : 'none',\n              fontWeight: selectedColor === 'lip' ? 'bold' : 'normal',\n              color: getContrastColor(lipColor)\n            },\n            onClick: () => handleColorSelection('lip'),\n            children: \"Lip Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: '10px'\n            },\n            children: lipColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnalyze,\n        style: {\n          marginTop: '30px',\n          backgroundColor: \"#000000\",\n          color: \"#ffffff\",\n          height: \"50px\",\n          width: \"250px\"\n        },\n        children: \"Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Analysis Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), analysisResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: result\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(FaceRead, \"Z0MZ3NcNsFmrJIj4LYjlP5GJk7Q=\", false, function () {\n  return [useOpenAI];\n});\n_c = FaceRead;\nexport default FaceRead;\nvar _c;\n$RefreshReg$(_c, \"FaceRead\");","map":{"version":3,"names":["React","useState","useOpenAI","jsxDEV","_jsxDEV","FaceRead","_s","imagePreview","setImagePreview","selectedColor","setSelectedColor","skinColor","setSkinColor","hairColor","setHairColor","eyeColor","setEyeColor","lipColor","setLipColor","borderStyle","setBorderStyle","analysisResults","setAnalysisResults","askQuestion","handleImageUpload","fileInput","document","createElement","setAttribute","addEventListener","event","file","target","files","reader","FileReader","onload","result","readAsDataURL","click","handleColorSelection","color","handleImageClick","canvas","width","height","ctx","getContext","drawImage","pixelData","getImageData","nativeEvent","offsetX","offsetY","data","hexColor","rgbToHex","r","g","b","toString","slice","getContrastColor","parseInt","substr","luminance","handleAnalyze","responses","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","maxWidth","maxHeight","cursor","marginTop","display","flexDirection","justifyContent","className","backgroundColor","border","fontWeight","marginLeft","map","index","_c","$RefreshReg$"],"sources":["/Users/iliang/Desktop/CS 178/cs178finalproject/src/components/face_read.js"],"sourcesContent":["import React, { useState } from 'react';\nimport useOpenAI from '../hooks/useOpenAI';\n\nconst FaceRead = () => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const [selectedColor, setSelectedColor] = useState(null);\n  const [skinColor, setSkinColor] = useState('#000000');\n  const [hairColor, setHairColor] = useState('#000000');\n  const [eyeColor, setEyeColor] = useState('#000000');\n  const [lipColor, setLipColor] = useState('#000000');\n  const [borderStyle, setBorderStyle] = useState('2px solid black');\n  const [analysisResults, setAnalysisResults] = useState([]);\n  const askQuestion = useOpenAI();\n\n  const handleImageUpload = () => {\n    // once user uploads new image, reset all buttons to black again\n    setSkinColor('#000000');\n    setHairColor('#000000');\n    setEyeColor('#000000');\n    setLipColor('#000000');\n\n    const fileInput = document.createElement('input');\n    fileInput.setAttribute('type', 'file');\n    fileInput.setAttribute('accept', 'image/*');\n\n    fileInput.addEventListener('change', (event) => {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n\n      reader.onload = function(event) {\n        setImagePreview(event.target.result);\n      }\n\n      if (file) {\n        reader.readAsDataURL(file);\n      }\n    });\n\n    fileInput.click();\n  };\n\n  const handleColorSelection = (color) => {\n    setSelectedColor(color);\n    setBorderStyle('2px solid black');\n  };\n\n  const handleImageClick = (event) => {\n    if (!selectedColor) return;\n\n    const canvas = document.createElement('canvas');\n    canvas.width = event.target.width;\n    canvas.height = event.target.height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(event.target, 0, 0, canvas.width, canvas.height);\n\n    const pixelData = ctx.getImageData(event.nativeEvent.offsetX, event.nativeEvent.offsetY, 1, 1).data;\n    const hexColor = rgbToHex(pixelData[0], pixelData[1], pixelData[2]);\n\n    switch (selectedColor) {\n      case 'skin':\n        setSkinColor(hexColor);\n        break;\n      case 'hair':\n        setHairColor(hexColor);\n        break;\n      case 'eye':\n        setEyeColor(hexColor);\n        break;\n      case 'lip':\n        setLipColor(hexColor);\n      default:\n        break;\n    }\n\n    setSelectedColor(null);\n    setBorderStyle('none');\n  };\n\n  const rgbToHex = (r, g, b) => {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  };\n\n  const getContrastColor = (color) => {\n    let r = parseInt(color.substr(1, 2), 16);\n    let g = parseInt(color.substr(3, 2), 16);\n    let b = parseInt(color.substr(5, 2), 16);\n\n    let luminance = (0.2126 * r + 0.7152 * g + 0.0722 * b) / 255;\n\n    // black text for light colors, and white for dark colors\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n\n//   const handleAnalyze = async () => {\n//     try {\n//       const responses = await askQuestion(skinColor, hairColor, eyeColor, lipColor);\n//       responses.forEach((response, index) => {\n//         console.log(`Response ${index + 1}:`, response);\n//       });\n//     } catch (error) {\n//       console.error('Error analyzing colors:', error);\n//     }\n//   };\n\n    const handleAnalyze = async () => {\n        try {\n        const responses = await askQuestion(skinColor, hairColor, eyeColor, lipColor);\n        setAnalysisResults(responses); // Set analysis results to state\n        } catch (error) {\n        console.error('Error analyzing colors:', error);\n        }\n    };\n\n  return (\n    <div>\n      <button onClick={handleImageUpload}>Upload Image</button>\n      {imagePreview && (\n        <div>\n          <h3>Selected Image:</h3>\n          <img\n            src={imagePreview}\n            alt=\"Uploaded\"\n            style={{ maxWidth: '100%', maxHeight: '300px', cursor: selectedColor ? 'crosshair' : 'auto' }}\n            onClick={handleImageClick}\n          />\n\n          {/* instructions on how to choose skin, hair, eye, and lip colors */}\n          <div style={{ marginTop: '10px' }}>\n            <p> Click each button and click on the corresponding body part in the photo to color pick. </p>\n          </div>\n\n          {/* buttons to choose skin, hair, eye, and lip colors */}\n          <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n            <div>\n              <button\n                className=\"color-button\"\n                style={{\n                  height: '30px',\n                  width: '150px',\n                  backgroundColor: skinColor,\n                  border: selectedColor === 'skin' ? borderStyle : 'none',\n                  fontWeight: selectedColor === 'skin' ? 'bold' : 'normal',\n                  color: getContrastColor(skinColor)\n                }}\n                onClick={() => handleColorSelection('skin')}\n              >\n                Skin Color\n              </button>\n              <span style={{ marginLeft: '10px' }}>{skinColor}</span>\n            </div>\n            <div>\n              <button\n                className=\"color-button\"\n                style={{\n                  height: '30px',\n                  width: '150px',\n                  backgroundColor: hairColor,\n                  border: selectedColor === 'hair' ? borderStyle : 'none',\n                  fontWeight: selectedColor === 'hair' ? 'bold' : 'normal',\n                  color: getContrastColor(hairColor)\n                }}\n                onClick={() => handleColorSelection('hair')}\n              >\n                Hair Color\n              </button>\n              <span style={{ marginLeft: '10px' }}>{hairColor}</span>\n            </div>\n            <div>\n              <button\n                className=\"color-button\"\n                style={{\n                  height: '30px',\n                  width: '150px',\n                  backgroundColor: eyeColor,\n                  border: selectedColor === 'eye' ? borderStyle : 'none',\n                  fontWeight: selectedColor === 'eye' ? 'bold' : 'normal',\n                  color: getContrastColor(eyeColor)\n                }}\n                onClick={() => handleColorSelection('eye')}\n              >\n                Eye Color\n              </button>\n              <span style={{ marginLeft: '10px' }}>{eyeColor}</span>\n            </div>\n            <div>\n              <button\n                className=\"color-button\"\n                style={{\n                  height: '30px',\n                  width: '150px',\n                  backgroundColor: lipColor,\n                  border: selectedColor === 'lip' ? borderStyle : 'none',\n                  fontWeight: selectedColor === 'lip' ? 'bold' : 'normal',\n                  color: getContrastColor(lipColor)\n                }}\n                onClick={() => handleColorSelection('lip')}\n              >\n                Lip Color\n              </button>\n              <span style={{ marginLeft: '10px' }}>{lipColor}</span>\n            </div>\n          </div>\n\n          <button onClick={handleAnalyze} style={{ marginTop: '30px', backgroundColor: \"#000000\", color: \"#ffffff\", height: \"50px\", width: \"250px\"}}>Analyze</button>\n        \n          {/* Display analysis results */}\n          <div style={{ marginTop: '20px' }}>\n            <h3>Analysis Results:</h3>\n            {analysisResults.map((result, index) => (\n              <p key={index}>{result}</p>\n            ))}\n          </div>\n        \n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FaceRead;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}