{"ast":null,"code":"var _jsxFileName = \"/Users/iliang/Desktop/CS 178/cs178finalproject/src/components/face_read.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FaceRead = () => {\n  _s();\n  const [imagePreview, setImagePreview] = useState(null);\n  const handleImageUpload = () => {\n    const fileInput = document.createElement('input');\n    fileInput.setAttribute('type', 'file');\n    fileInput.setAttribute('accept', 'image/*');\n    fileInput.addEventListener('change', event => {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = function (event) {\n        setImagePreview(event.target.result);\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n      }\n    });\n    fileInput.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routes-title text-left\",\n      children: \"Update Photo and Choose Colors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleImageUpload,\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreview,\n        alt: \"Uploaded\",\n        style: {\n          maxWidth: '100%',\n          maxHeight: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(FaceRead, \"oV9H4GO/7w98TBY5ORoZjunhoaU=\");\n_c = FaceRead;\nexport default FaceRead;\nvar _c;\n$RefreshReg$(_c, \"FaceRead\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FaceRead","_s","imagePreview","setImagePreview","handleImageUpload","fileInput","document","createElement","setAttribute","addEventListener","event","file","target","files","reader","FileReader","onload","result","readAsDataURL","click","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","style","maxWidth","maxHeight","_c","$RefreshReg$"],"sources":["/Users/iliang/Desktop/CS 178/cs178finalproject/src/components/face_read.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FaceRead = () => {\n  const [imagePreview, setImagePreview] = useState(null);\n\n  const handleImageUpload = () => {\n    const fileInput = document.createElement('input');\n    fileInput.setAttribute('type', 'file');\n    fileInput.setAttribute('accept', 'image/*');\n\n    fileInput.addEventListener('change', (event) => {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n\n      reader.onload = function(event) {\n        setImagePreview(event.target.result);\n      }\n\n      if (file) {\n        reader.readAsDataURL(file);\n      }\n    });\n\n    fileInput.click();\n  };\n\n  return (\n    <div>\n      <div className=\"routes-title text-left\">Update Photo and Choose Colors</div>\n      <button onClick={handleImageUpload}>Upload Image</button>\n      {imagePreview && (\n        <div>\n          <h3>Preview:</h3>\n          <img src={imagePreview} alt=\"Uploaded\" style={{ maxWidth: '100%', maxHeight: '300px' }} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FaceRead;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IACjDF,SAAS,CAACG,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC;IACtCH,SAAS,CAACG,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC;IAE3CH,SAAS,CAACI,gBAAgB,CAAC,QAAQ,EAAGC,KAAK,IAAK;MAC9C,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAE/BD,MAAM,CAACE,MAAM,GAAG,UAASN,KAAK,EAAE;QAC9BP,eAAe,CAACO,KAAK,CAACE,MAAM,CAACK,MAAM,CAAC;MACtC,CAAC;MAED,IAAIN,IAAI,EAAE;QACRG,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;MAC5B;IACF,CAAC,CAAC;IAEFN,SAAS,CAACc,KAAK,CAAC,CAAC;EACnB,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAKsB,SAAS,EAAC,wBAAwB;MAAAD,QAAA,EAAC;IAA8B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5E1B,OAAA;MAAQ2B,OAAO,EAAEtB,iBAAkB;MAAAgB,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxDvB,YAAY,iBACXH,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB1B,OAAA;QAAK4B,GAAG,EAAEzB,YAAa;QAAC0B,GAAG,EAAC,UAAU;QAACC,KAAK,EAAE;UAAEC,QAAQ,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAQ;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CApCID,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}